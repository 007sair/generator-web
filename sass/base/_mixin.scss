//------------------
// mixin
//------------------
@import "prefixer";

/**
 * 根据当前设计稿进行单位转换
 * $isPX   {[boolean]}    	[是否使用px单位 	true => 始终返回640比例的尺寸   false => 返回rem单位]
 * $design {[number]} 	  	[当前设计稿尺寸	640/750]
 * $output {[number]} 	  	[需要输出的数值类型  640/750 	修改数值需修改对应的js   640=>rem.js   750=>flexible.js]
 * @param  {[number]} $px 	[不带单位的数值]
 * 
 * @return {[string]}     	[返回rem或px 取决于$isPX]
 */
$isPX: false;
$design: 750;
$output: 750; //修改次数值需修改对应的js引用 640=>rem.js  750=>flexible.js
@function rem($px) {
	@if $design == 750 { //如果设计稿为750
		@if $isPX { //750输出640比例的px
			@return ($px * 640 / 750) / 2 * 1px;
		} @else { //输出rem
			@if $output == 640 {
				@return ($px * 640 / 750) / 40 * 1rem;
			}
			@if $output == 750 {
				@return $px / 75 * 1rem;
			}
		}
	}
	@if $design == 640 { //如果设计稿为640
		@if $isPX {
			@return $px / 2 * 1px;
		} @else { //输出rem
			@if $output == 640 {
				@return $px / 40 * 1rem;
			}
			@if $output == 750 {
				@return ($px * 750 / 640) / 75 * 1rem;
			}
		}
	}
}


/**
 * 清除浮动
 * @param  {[type]} $legacy-support-for-ie: true     [是否支持ie8-  默认支持]
 */
@mixin clearfix($legacy-support-for-ie: true) {
    @if $legacy-support-for-ie {
        *zoom: 1;
    }
    &:before,&:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
        overflow: hidden;
    }
}
%clearfix {
    @include clearfix;
}


/**
 * [半透明]
 * @param  {[type]} $opacity:.65         [透明数值 0-1]
 * @param  {[type]} $support-for-ie:true [是否支持ie8-  默认支持]
 */
@mixin opacity($opacity:.65, $support-for-ie:true) {
	opacity: $opacity;
	@if $support-for-ie{
		$opacity-ie: $opacity * 100;
		filter: alpha(opacity=$opacity-ie); //IE8
	}
}


/**
 * 背景半透明
 * @param  {[type]} $color               [色值 如：#f00]
 * @param  {[type]} $opacity             [透明度  0-1]
 * @param  {[type]} $support-for-ie:true [是否支持ie  默认支持]
 */
@mixin rgba($color, $opacity, $support-for-ie:true){
	background-color:rgba($color,$opacity);
	@if $support-for-ie{
		filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{ie-hex-str(rgba($color,$opacity))},endColorstr=#{ie-hex-str(rgba($color,$opacity))});
		:root & {
			filter: none; //for ie9
		}
	}
}


/**
 * 绝对定位版 绝对居中
 */
@mixin center($width: null, $height: null) {
	position: absolute;
	top: 50%;
	left: 50%;

	@if not $width and not $height {
		@include translate((-50%, -50%));
	} @else if $width and $height {
		width: $width;
		height: $height;
		margin: {
			top: -($width / 2);
			left: -($height / 2 );
		}
	} @else if not $height {
		width: $width;
		margin-left: -($width / 2);
		@include prefixer(transform, translateY(-50%));
	} @else {
		height: $height;
		margin-top: -($height / 2);
		@include prefixer(transform, translateX(-50%));
	}
}


//float 
@mixin float($direction: left,$support-for-ie:false){
	float: unquote($direction);
	@if $support-for-ie{
		_display: inline;
	}
}

//inline-block
@mixin inline-block($alignment: middle, $support-for-ie: false) {
	display: inline-block;
	@if $alignment and $alignment != none {
		vertical-align: $alignment;
	}
	@if $support-for-ie {
//		*vertical-align: auto;
		*display: inline;
		*zoom: 1;
	}
}

//最小宽、高
@mixin minBlock($type, $num){
	@if ($type == width or $type == both ){
		min-width: $num;
		width: auto !important; 
		_width: $num;
	}
	@if ($type == height or $type == both){
		min-height: $num;
		height: auto !important; 
		_height: $num;
	}
}


//input等输入框的默认样式重置
@mixin placeholder($color){
	&::-webkit-input-placeholder { 
		color: $color; 
	} 
	&:-moz-placeholder {
		color: $color;
	} 
	&::-moz-placeholder { 
		color: $color;
	}
	&:-ms-input-placeholder { 
		color: $color; 
	}
}


/**
 * 全屏遮罩
 */
@mixin mask($zIndex: 1000){
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	z-index: $zIndex;
}


//H5背景图设置
//@param  {[string]} $url       	[图片路径，带引号]
//@param  {[value]}  $size      	[background-size的值，可以带空格]
//@param  {[value]}  $else:null 	[可不填，background的其他值]
@mixin bgSize($url, $size, $else:null){
	@if not $else{
		background: url(unquote($url)); 
	} @else{
		background: url(unquote($url)) $else; 
	}
	@include prefixer(background-size, $size);
}


/**
 * 使用原生滚动 & 隐藏滚动条
 */
@mixin scrollbar() {
	-webkit-overflow-scrolling: touch;
	&::-webkit-scrollbar {
		display: none;
	}
}