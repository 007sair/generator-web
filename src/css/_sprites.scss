/*
scss变量包含了icon的编译状态信息，存储在各自icon命名的变量下。
例如，一张名为icon-home.png的图标：
.icon-home {
	width: $icon-home-width;
}

大型数组变量包含了单个图标的所有信息，例如：
$icon-home: x y offset_x offset_y width height total_width total_height image_path name;

在本节的底部，我们提供有关spritesheet本身的信息：
$spritesheet: width height image $spritesheet-sprites;
*/
$entry-cztj-name: 'entry-cztj';
$entry-cztj-x: 0rem;
$entry-cztj-y: 0rem;
$entry-cztj-offset-x: 0rem;
$entry-cztj-offset-y: 0rem;
$entry-cztj-width: 1.2rem;
$entry-cztj-height: 1.2rem;
$entry-cztj-total-width: 3.49333rem;
$entry-cztj-total-height: 3.22667rem;
$entry-cztj-image: '../images/icon-sprite.png';
$entry-cztj: (0rem, 0rem, 0rem, 0rem, 1.2rem, 1.2rem, 3.49333rem, 3.22667rem, '../images/icon-sprite.png', 'entry-cztj', );
$entry-jkt-name: 'entry-jkt';
$entry-jkt-x: 1.46667rem;
$entry-jkt-y: 0rem;
$entry-jkt-offset-x: -1.46667rem;
$entry-jkt-offset-y: 0rem;
$entry-jkt-width: 1.2rem;
$entry-jkt-height: 1.2rem;
$entry-jkt-total-width: 3.49333rem;
$entry-jkt-total-height: 3.22667rem;
$entry-jkt-image: '../images/icon-sprite.png';
$entry-jkt: (1.46667rem, 0rem, -1.46667rem, 0rem, 1.2rem, 1.2rem, 3.49333rem, 3.22667rem, '../images/icon-sprite.png', 'entry-jkt', );
$entry-mxt-name: 'entry-mxt';
$entry-mxt-x: 0rem;
$entry-mxt-y: 1.46667rem;
$entry-mxt-offset-x: 0rem;
$entry-mxt-offset-y: -1.46667rem;
$entry-mxt-width: 1.2rem;
$entry-mxt-height: 1.2rem;
$entry-mxt-total-width: 3.49333rem;
$entry-mxt-total-height: 3.22667rem;
$entry-mxt-image: '../images/icon-sprite.png';
$entry-mxt: (0rem, 1.46667rem, 0rem, -1.46667rem, 1.2rem, 1.2rem, 3.49333rem, 3.22667rem, '../images/icon-sprite.png', 'entry-mxt', );
$entry-xlb-name: 'entry-xlb';
$entry-xlb-x: 1.46667rem;
$entry-xlb-y: 1.46667rem;
$entry-xlb-offset-x: -1.46667rem;
$entry-xlb-offset-y: -1.46667rem;
$entry-xlb-width: 1.2rem;
$entry-xlb-height: 1.2rem;
$entry-xlb-total-width: 3.49333rem;
$entry-xlb-total-height: 3.22667rem;
$entry-xlb-image: '../images/icon-sprite.png';
$entry-xlb: (1.46667rem, 1.46667rem, -1.46667rem, -1.46667rem, 1.2rem, 1.2rem, 3.49333rem, 3.22667rem, '../images/icon-sprite.png', 'entry-xlb', );
$icon-arr-rt-name: 'icon-arr-rt';
$icon-arr-rt-x: 0rem;
$icon-arr-rt-y: 2.93333rem;
$icon-arr-rt-offset-x: 0rem;
$icon-arr-rt-offset-y: -2.93333rem;
$icon-arr-rt-width: 0.16rem;
$icon-arr-rt-height: 0.29rem;
$icon-arr-rt-total-width: 3.49333rem;
$icon-arr-rt-total-height: 3.22667rem;
$icon-arr-rt-image: '../images/icon-sprite.png';
$icon-arr-rt: (0rem, 2.93333rem, 0rem, -2.93333rem, 0.16rem, 0.29rem, 3.49333rem, 3.22667rem, '../images/icon-sprite.png', 'icon-arr-rt', );
$icon-cancel-name: 'icon-cancel';
$icon-cancel-x: 2.93333rem;
$icon-cancel-y: 1.65333rem;
$icon-cancel-offset-x: -2.93333rem;
$icon-cancel-offset-y: -1.65333rem;
$icon-cancel-width: 0.32rem;
$icon-cancel-height: 0.32rem;
$icon-cancel-total-width: 3.49333rem;
$icon-cancel-total-height: 3.22667rem;
$icon-cancel-image: '../images/icon-sprite.png';
$icon-cancel: (2.93333rem, 1.65333rem, -2.93333rem, -1.65333rem, 0.32rem, 0.32rem, 3.49333rem, 3.22667rem, '../images/icon-sprite.png', 'icon-cancel', );
$icon-clear-name: 'icon-clear';
$icon-clear-x: 2.93333rem;
$icon-clear-y: 2.24rem;
$icon-clear-offset-x: -2.93333rem;
$icon-clear-offset-y: -2.24rem;
$icon-clear-width: 0.32rem;
$icon-clear-height: 0.32rem;
$icon-clear-total-width: 3.49333rem;
$icon-clear-total-height: 3.22667rem;
$icon-clear-image: '../images/icon-sprite.png';
$icon-clear: (2.93333rem, 2.24rem, -2.93333rem, -2.24rem, 0.32rem, 0.32rem, 3.49333rem, 3.22667rem, '../images/icon-sprite.png', 'icon-clear', );
$icon-nav-name: 'icon-nav';
$icon-nav-x: 2.93333rem;
$icon-nav-y: 0rem;
$icon-nav-offset-x: -2.93333rem;
$icon-nav-offset-y: 0rem;
$icon-nav-width: 0.56rem;
$icon-nav-height: 0.56rem;
$icon-nav-total-width: 3.49333rem;
$icon-nav-total-height: 3.22667rem;
$icon-nav-image: '../images/icon-sprite.png';
$icon-nav: (2.93333rem, 0rem, -2.93333rem, 0rem, 0.56rem, 0.56rem, 3.49333rem, 3.22667rem, '../images/icon-sprite.png', 'icon-nav', );
$icon-search-name: 'icon-search';
$icon-search-x: 2.93333rem;
$icon-search-y: 0.83rem;
$icon-search-offset-x: -2.93333rem;
$icon-search-offset-y: -0.82667rem;
$icon-search-width: 0.56rem;
$icon-search-height: 0.56rem;
$icon-search-total-width: 3.49333rem;
$icon-search-total-height: 3.22667rem;
$icon-search-image: '../images/icon-sprite.png';
$icon-search: (2.93333rem, 0.83rem, -2.93333rem, -0.82667rem, 0.56rem, 0.56rem, 3.49333rem, 3.22667rem, '../images/icon-sprite.png', 'icon-search', );
$spritesheet-width: 3.49333rem;
$spritesheet-height: 3.22667rem;
$spritesheet-image: '../images/icon-sprite.png';
$spritesheet-sprites: ($entry-cztj, $entry-jkt, $entry-mxt, $entry-xlb, $icon-arr-rt, $icon-cancel, $icon-clear, $icon-nav, $icon-search, );
$spritesheet: (3.49333rem, 3.22667rem, '../images/icon-sprite.png', $spritesheet-sprites, );

/*
以下mixins旨在与数组类型变量一起使用，也可单独使用！
.icon-home {
	@include sprite-width($icon-home);
}

.icon-email {
	@include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
	width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
	height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
	$sprite-offset-x: nth($sprite, 3);
	$sprite-offset-y: nth($sprite, 4);

	/* 
	将定位换成百分比单位
	background-position百分比单位
	参考自：https://github.com/banricho/webLog/issues/1
	*/
	$offset_x: nth($sprite, 3);
	$offset_y: nth($sprite, 4);
	$width: nth($sprite, 5);
	$height: nth($sprite, 6);
	$total_width: nth($sprite, 7);
	$total_height: nth($sprite, 8);

	//分母为0时让其为1rem（解决除法分母为0时报错问题）
	$x_fm: if( (($width - $total_width) == 0) , 1rem, ($width - $total_width));
	$y_fm: if( (($height - $total_height) == 0) , 1rem, ($height - $total_height));

	background-position: percentage($offset_x / $x_fm) percentage($offset_y / $y_fm);

	/* rem单位 */
	//background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite, $url: '../images/icon-sprite.png') {
	background-image: url(#{$url});
	background-size: 3.49333rem 3.22667rem;
}

@mixin sprite($sprite, $url: '../images/icon-sprite.png') {
	@include sprite-image($sprite, $url);
	@include sprite-position($sprite);
	@include sprite-width($sprite);
	@include sprite-height($sprite);
}


/*
sprites混合器会直接生成样式，也能在scss内部被调用：
@include sprites($spritesheet-sprites, $url);
用法：
@param $spritesheet-sprites 	数组类型，所有图标命名的变量集合
@param $url  					图片地址，默认可不传入，使用gulp生成的路径，也可从外部传入自定义路径
$url使用场景：
	$online: true; 	//定义一个变量，标识当前使用环境 false or true
	$sprite-icons: '../images/icon-sprite.png'; //图标地址变量，默认值为gulp生成的
	@if $online { //如果是线上，将图标地址变量重新赋值
		$sprite-icons: 'http://xxx.xxx.icon-sprite.png'; //线上链接
	}
	//再将图标地址变量当第二个参数传入即可
	@include sprites($spritesheet-sprites, $sprite-icons);
*/
@mixin sprites($sprites, $url: '../images/icon-sprite.png') {
	%sprite-common { //提取图标样式公共代码
		background-image: url(#{$url});
		background-size: 3.49333rem 3.22667rem;
	}
	@each $sprite in $sprites { //遍历每个图标，生成图标样式
		$sprite-name: nth($sprite, 10);
		.#{$sprite-name} {
			@extend %sprite-common;
			@include sprite-width($sprite);
			@include sprite-height($sprite);
			@include sprite-position($sprite);
		}
	}
}
